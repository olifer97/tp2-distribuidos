
version: '3'
services:
  rabbitmq:
    build:
      context: ./rabbitmq
      dockerfile: rabbitmq.dockerfile
    ports:
      - 15672:15672
      - 5672:5672
    healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:15672"]
        interval: 10s
        timeout: 5s
        retries: 10

  matches_spliter:
    container_name: matches_spliter
    image: matches_spliter:latest
    entrypoint: python3 /main.py
    restart: on-failure
    depends_on:
      - rabbitmq
    links: 
      - rabbitmq
    environment:
      - PYTHONUNBUFFERED=1

  ladder_filter:
    container_name: ladder_filter
    image: ladder_filter:latest
    entrypoint: python3 /main.py
    restart: on-failure
    depends_on:
      - rabbitmq
    links: 
      - rabbitmq
    environment:
      - PYTHONUNBUFFERED=1

  servers_avg_rating_duration:
    container_name: servers_avg_rating_duration
    image: servers_avg_rating_duration:latest
    entrypoint: python3 /main.py
    restart: on-failure
    depends_on:
      - rabbitmq
    links: 
      - rabbitmq
    environment:
      - PYTHONUNBUFFERED=1

  players_clone_rating_filter:
    container_name: players_clone_rating_filter
    image: players_clone_rating_filter:latest
    entrypoint: python3 /main.py
    restart: on-failure
    depends_on:
      - rabbitmq
    links: 
      - rabbitmq
    environment:
      - PYTHONUNBUFFERED=1

  join_controller_3:
    container_name: join_controller_3
    image: join_controller:latest
    entrypoint: python3 /main.py
    restart: on-failure
    depends_on:
      - rabbitmq
    links: 
      - rabbitmq
    environment:
      - PYTHONUNBUFFERED=1
      - K_JOINERS=2
      - LEFT_INPUT_QUEUE=1v1_arena_matches
      - RIGHT_INPUT_QUEUE=players_clone_2
      - OUTPUT_QUEUES_SUFFIX=match_players_joiner_
      - LEFT_BY=token
      - RIGHT_BY=match

  

  joiner_type3_0:
    container_name: joiner_type3_0
    image: joiner:latest
    entrypoint: python3 /main.py
    restart: on-failure
    depends_on:
      - rabbitmq
    links: 
      - rabbitmq
    environment:
      - PYTHONUNBUFFERED=1
      - INPUT_QUEUE=match_players_joiner_0 
      - OUTPUT_QUEUE=joined_players_matches
      - LEFT_BY=token
      - RIGHT_BY=match



  joiner_type3_1:
    container_name: joiner_type3_1
    image: joiner:latest
    entrypoint: python3 /main.py
    restart: on-failure
    depends_on:
      - rabbitmq
    links: 
      - rabbitmq
    environment:
      - PYTHONUNBUFFERED=1
      - INPUT_QUEUE=match_players_joiner_1 
      - OUTPUT_QUEUE=joined_players_matches
      - LEFT_BY=token
      - RIGHT_BY=match



  join_controller_4:
    container_name: join_controller_4
    image: join_controller:latest
    entrypoint: python3 /main.py
    restart: on-failure
    depends_on:
      - rabbitmq
    links: 
      - rabbitmq
    environment:
      - PYTHONUNBUFFERED=1
      - K_JOINERS=2
      - LEFT_INPUT_QUEUE=team_islands_matches
      - RIGHT_INPUT_QUEUE=players_greater_2000
      - OUTPUT_QUEUES_SUFFIX=match_proplayers_joiner_
      - LEFT_BY=token
      - RIGHT_BY=match

  

  joiner_type4_0:
    container_name: joiner_type4_0
    image: joiner:latest
    entrypoint: python3 /main.py
    restart: on-failure
    depends_on:
      - rabbitmq
    links: 
      - rabbitmq
    environment:
      - PYTHONUNBUFFERED=1
      - INPUT_QUEUE=match_proplayers_joiner_0 
      - OUTPUT_QUEUE=joined_proplayers_matches
      - LEFT_BY=token
      - RIGHT_BY=match



  joiner_type4_1:
    container_name: joiner_type4_1
    image: joiner:latest
    entrypoint: python3 /main.py
    restart: on-failure
    depends_on:
      - rabbitmq
    links: 
      - rabbitmq
    environment:
      - PYTHONUNBUFFERED=1
      - INPUT_QUEUE=match_proplayers_joiner_1 
      - OUTPUT_QUEUE=joined_proplayers_matches
      - LEFT_BY=token
      - RIGHT_BY=match

      

  groupby_match_controller:
    container_name: groupby_match_controller
    image: groupby_controller:latest
    entrypoint: python3 /main.py
    restart: on-failure
    depends_on:
      - rabbitmq
    links: 
      - rabbitmq
    environment:
      - PYTHONUNBUFFERED=1
      - K_REDUCERS=2
      - INPUT_QUEUE=players_clone_1
      - OUTPUT_QUEUES_SUFFIX=players_reducer_
      - GROUP_BY=match

  

  groupby_match_reducer_0:
    container_name: groupby_match_reducer_0
    image: groupby_match_reducer:latest
    entrypoint: python3 /main.py
    restart: on-failure
    depends_on:
      - rabbitmq
    links: 
      - rabbitmq
    environment:
      - PYTHONUNBUFFERED=1
      - INPUT_QUEUE=players_reducer_0
      - OUTPUT_QUEUE=1v1_players



  groupby_match_reducer_1:
    container_name: groupby_match_reducer_1
    image: groupby_match_reducer:latest
    entrypoint: python3 /main.py
    restart: on-failure
    depends_on:
      - rabbitmq
    links: 
      - rabbitmq
    environment:
      - PYTHONUNBUFFERED=1
      - INPUT_QUEUE=players_reducer_1
      - OUTPUT_QUEUE=1v1_players



  groupby_civ_controller_3:
    container_name: groupby_civ_controller_3
    image: groupby_controller:latest
    entrypoint: python3 /main.py
    restart: on-failure
    depends_on:
      - rabbitmq
    links: 
      - rabbitmq
    environment:
      - PYTHONUNBUFFERED=1
      - K_REDUCERS=2
      - INPUT_QUEUE=joined_players_matches
      - OUTPUT_QUEUES_SUFFIX=civ_type3_reducer_
      - GROUP_BY=civ
  
  

  groupby_civ_reducer_type3_0:
    container_name: groupby_civ_reducer_type3_0
    image: groupby_civ_reducer:latest
    entrypoint: python3 /main.py
    restart: on-failure
    depends_on:
      - rabbitmq
    links: 
      - rabbitmq
    environment:
      - PYTHONUNBUFFERED=1
      - INPUT_QUEUE=civ_type3_reducer_0 
      - OUTPUT_QUEUE=groupby_civ_3
      - GROUP_BY=civ



  groupby_civ_reducer_type3_1:
    container_name: groupby_civ_reducer_type3_1
    image: groupby_civ_reducer:latest
    entrypoint: python3 /main.py
    restart: on-failure
    depends_on:
      - rabbitmq
    links: 
      - rabbitmq
    environment:
      - PYTHONUNBUFFERED=1
      - INPUT_QUEUE=civ_type3_reducer_1 
      - OUTPUT_QUEUE=groupby_civ_3
      - GROUP_BY=civ



  groupby_civ_controller_4:
    container_name: groupby_civ_controller_4
    image: groupby_controller:latest
    entrypoint: python3 /main.py
    restart: on-failure
    depends_on:
      - rabbitmq
    links: 
      - rabbitmq
    environment:
      - PYTHONUNBUFFERED=1
      - K_REDUCERS=2
      - INPUT_QUEUE=joined_proplayers_matches
      - OUTPUT_QUEUES_SUFFIX=civ_type4_reducer_
      - GROUP_BY=civ
  
  

  groupby_civ_reducer_type4_0:
    container_name: groupby_civ_reducer_type4_0
    image: groupby_civ_reducer:latest
    entrypoint: python3 /main.py
    restart: on-failure
    depends_on:
      - rabbitmq
    links: 
      - rabbitmq
    environment:
      - PYTHONUNBUFFERED=1
      - INPUT_QUEUE=civ_type4_reducer_0 
      - OUTPUT_QUEUE=groupby_civ_4
      - GROUP_BY=civ



  groupby_civ_reducer_type4_1:
    container_name: groupby_civ_reducer_type4_1
    image: groupby_civ_reducer:latest
    entrypoint: python3 /main.py
    restart: on-failure
    depends_on:
      - rabbitmq
    links: 
      - rabbitmq
    environment:
      - PYTHONUNBUFFERED=1
      - INPUT_QUEUE=civ_type4_reducer_1 
      - OUTPUT_QUEUE=groupby_civ_4
      - GROUP_BY=civ


    
  winner_vs_loser_filter:
    container_name: winner_vs_loser_filter
    image: winner_vs_loser_filter:latest
    entrypoint: python3 /main.py
    restart: on-failure
    depends_on:
      - rabbitmq
    links: 
      - rabbitmq
    environment:
      - PYTHONUNBUFFERED=1
      - INPUT_QUEUE=1v1_players
      - OUTPUT_QUEUE=2
    
  arena_filter:
    container_name: arena_filter
    image: map_no_mirror_filter:latest
    entrypoint: python3 /main.py
    restart: on-failure
    depends_on:
      - rabbitmq
    links: 
      - rabbitmq
    environment:
      - PYTHONUNBUFFERED=1
      - INPUT_QUEUE=1v1_matches
      - OUTPUT_QUEUE=1v1_arena_matches
      - MAP=arena
      - NO_MIRROR=true

  islands_filter:
    container_name: islands_filter
    image: map_no_mirror_filter:latest
    entrypoint: python3 /main.py
    restart: on-failure
    depends_on:
      - rabbitmq
    links: 
      - rabbitmq
    environment:
      - PYTHONUNBUFFERED=1
      - INPUT_QUEUE=team_matches
      - OUTPUT_QUEUE=team_islands_matches
      - MAP=islands
      - NO_MIRROR=null
